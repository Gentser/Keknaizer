Edit contents in Items
*******************************
//Тестирование edit-ing в Item-ах

//    qDebug() << "Before " << QString::fromStdString(item->getContent());

//    item->editConntentByContent(std::string("Has been Edited"));

//    qDebug() << "After " << QString::fromStdString(item->getContent());

//    Diagram->getTimelines()->at(0).getIntervals()->at(0).editConntentByContent("NEW HERE");


Edit times in Items
*******************************


try{
    Diagram->getTimelines()->at(0).getIntervals()->at(2).editStartByContent(
                            QDateTime(QDate(2000,1,1), QTime(0,0)));
} catch (EditTimeException e){
    qCritical() << "CATCH EXCEPT" << QString::fromStdString(e.getMessage());
}

*******************************
//    //Только для тетсирования
//    for (int i = 0; i < Diagram->getTimelines()->at(0).getIntervals()->size(); i++){
//        Diagram->getTimelines()->at(0).getIntervals()->at(i).print();
//    }

*******************************

//ТУТ ПРОБЛЕМА С ИТЕРАТОРОМ(который написали)
//    for (auto iter = Diagram->getTimelines().at(0).begin();
//         iter != Diagram->getTimelines().at(0).end(); ++iter){
//        iter->get_value.print();
//    }

*******************************
qDebug() << "================" ;
firstTimeline->findItemByName("Задача")->print();
qDebug() << "НАШЛАСЬ" ;


********************************


firstTimeline->editItemTimeByContent("Задача", QDateTime(QDate(2099,5,1), QTime(17,59)),
                                     QDateTime(QDate(3000,5,1), QTime(17,59)));

qDebug() << "АПОСЛЯ РЕДАКТИРОВАНИЯ ============" ;
int i = 0;
for (auto iter = Diagram->getTimelines()->at(0).getIntervals()->begin();
     iter != Diagram->getTimelines()->at(0).getIntervals()->end(); ++iter){
    qDebug() << "Итерация " << i++ << "name= " << QString::fromStdString(iter->getContent());
    iter->print();
}

*******************************

//            qDebug() << "Добавить тот же item";
//            firstTimeline->addItem(item);

*******************************


TimelineItem <std::string> *SomeItem = new TimelineItem<std::string>(QDateTime(QDate(2009,1,1), QTime(0,0)),
                                               QDateTime(QDate(2009,2,3), QTime(15,35)),
                                               std::string("new"));

firstTimeline->addItem(SomeItem);


*******************************
//Find ItemByName Test from Timeline


firstTimeline->deleteItemByName("А это вторая задача!");

firstTimeline->editItemTimeByContent("Задача",
                                     QDateTime(QDate(2000,3,5), QTime(17,59)),
                                     QDateTime(QDate(2010,3,5), QTime(17,59)));

qDebug() << "АПОСЛЯ РЕДАКТИРОВАНИЯ ============" ;
int i = 0;
for (auto iter = Diagram->getTimelines()->at(0).getIntervals()->begin();
     iter != Diagram->getTimelines()->at(0).getIntervals()->end(); ++iter){
    qDebug() << "Итерация " << i++ << "name= " << QString::fromStdString(iter->getContent());
    iter->print();
}



